<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024-2025 Martin Atanasov.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.martinatanasov</groupId>
	<artifactId>computerstore</artifactId>
	<version>1.0.3</version>
	<name>spring-computerstore</name>
	<description>Computer Store - Demo project for e-commerce platform</description>

	<url>http://computer-store.eu-north-1.elasticbeanstalk.com</url>
	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>The license include entire project</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Martin Atanasov</name>
			<roles>
				<role>Fullstack developer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<java.version>21</java.version>
		<stripe.version>28.3.1</stripe.version>
	</properties>

	<!-- Global dependencies -->
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<!-- Enable Cached Data with Spring-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<!-- Thymeleaf - Java template-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Thymeleaf Security extra methods -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<!-- Data validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- MySQL -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Flyway for data migrations-->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-mysql</artifactId>
		</dependency>

		<!-- Stripe - payment library -->
		<dependency>
			<groupId>com.stripe</groupId>
			<artifactId>stripe-java</artifactId>
			<version>${stripe.version}</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Lombok - Getters/Setters with annotation-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Devtools for fast project reload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<profiles>
		<!-- Development default profile -->
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>

				<!-- Aspect Oriented Programming (Aspectj) -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-aop</artifactId>
				</dependency>
				<!-- Zipkin for back-end trace -->
				<dependency>
					<groupId>io.micrometer</groupId>
					<artifactId>micrometer-tracing-bridge-brave</artifactId>
				</dependency>

				<dependency>
					<groupId>io.zipkin.reporter2</groupId>
					<artifactId>zipkin-reporter-brave</artifactId>
				</dependency>

			</dependencies>
		</profile>

		<!-- Production profile use (mvn clean package -Pproduction) -->
		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<!-- Show more information -->
							<verbose>true</verbose>
							<excludes>
								<!-- Exclude specific classes or packages -->
								<exclude>**/LoggingAspect.java</exclude>
								<exclude>**/logback.txt</exclude>
								<exclude>**/computerstore/boostrap/**</exclude>
								<exclude>**/PaymentController.java</exclude>
								<exclude>**/CustomCorsConfig.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>

					<!-- Configuration for AOT and AppCDS processing for Buildpacks -->
					<image>
						<env>
							<BP_SPRING_AOT_ENABLED>true</BP_SPRING_AOT_ENABLED>
							<BP_JVM_CDS_ENABLED>true</BP_JVM_CDS_ENABLED>
						</env>
					</image>
				</configuration>

				<executions>
					<!-- Ahead Of Time (AOT) for fast startup-->
					<execution>
						<id>process-aot</id>
						<goals>
							<goal>process-aot</goal>
						</goals>
					</execution>

					<!-- Additional properties for actuator.info run 'mvn spring-boot:run' -->
					<execution>
						<goals>
							<!-- Add build info to the jar-->
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<foo>foo</foo>
								<bar>bar</bar>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Skip integration tests in build (with IT keyword) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>

				<!-- Configure parallel integration testing -->
				<configuration>
					<properties>
						<!-- JUnit 5 specific configuration -->
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled = true
							junit.jupiter.execution.parallel.mode.default = concurrent
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>

			<!-- Maven Surefire (Adding Mockito as agent. This will clear warnings) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- Enable Mockito as test agent and configure parallel unit testing -->
				<configuration>
					<argLine>-javaagent:${settings.localRepository}/org/mockito/mockito-core/${mockito.version}/mockito-core-${mockito.version}.jar</argLine>

					<properties>
						<!-- JUnit 5 specific configuration -->
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled = true
							junit.jupiter.execution.parallel.mode.default = concurrent
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
